package bank.client.socket;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.net.Socket;
import java.text.MessageFormat;

import bank.Account;
import bank.InactiveException;
import bank.OverdrawException;

public class SocketAccount implements Account {
	private String number;
	private SocketDriver driver;

	public SocketAccount(String number, SocketDriver driver) throws IOException {
		this.number = number;
		this.driver = driver;
	}
	@Override
	public String getNumber() throws IOException {
		return number;
	}

	@Override
	public String getOwner() throws IOException {
		try {
			return driver.invoke("getAccountOwner," + number)[1];
		} catch (IllegalArgumentException | NoSuchMethodException
				| OverdrawException | InactiveException e) {
			e.printStackTrace();
		}
		return "";
	}

	@Override
	public boolean isActive() throws IOException {
		try {
			return Boolean.parseBoolean(driver.invoke("getAccountStatus," + number)[1]);
		} catch (IllegalArgumentException | NoSuchMethodException
				| OverdrawException | InactiveException e) {
			e.printStackTrace();
		}
		return false;
	}

	@Override
	public void deposit(double amount) throws IOException,
			IllegalArgumentException, InactiveException {
		try {
			driver.invoke("depositOnAccount," + number + "," + amount);
		} catch (IllegalArgumentException | NoSuchMethodException
				| OverdrawException | InactiveException e) {
			e.printStackTrace();
		}
	}

	@Override
	public void withdraw(double amount) throws IOException,
			IllegalArgumentException, OverdrawException, InactiveException {
		try {
			driver.invoke("withdrawFromAccount," + number + "," + amount);
		} catch (IllegalArgumentException | NoSuchMethodException
				| OverdrawException | InactiveException e) {
			e.printStackTrace();
		}
	}

	@Override
	public double getBalance() throws IOException {
		try {
			return Double.parseDouble(driver.invoke("getAccountBalance, " + number)[1]);
		} catch (IllegalArgumentException | NoSuchMethodException
				| OverdrawException | InactiveException e) {
			e.printStackTrace();
		}
		return 0;
	}
}
